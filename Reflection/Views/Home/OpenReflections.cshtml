<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" />
    <link href="~/CSS/openReflections.css" rel="stylesheet" type="text/css" />
    <title>Screen2</title>

    <script>
        microsoftTeams.initialize();
        function closeTaskModule() {
            let closeTaskInfo = {
                action: "closeFirstTaskModule"
            };
            microsoftTeams.tasks.submitTask(closeTaskInfo);
            return true;
        };
    </script>
</head>

<body>
    <div class="loader"></div>
    <div class="modal2">
        <!-- Modal -->
        <div role="document">
            <div class="custom-mc">
                <input type="text" id="reflectionid" value="@ViewBag.reflectionId" style="display:none" />
                <div class="modal-mb-sc2">
                    <div class="sc2br-blk">
                        <div class="created-sc2">Posted by <span id="createdby"></span></div>
                        <span class="divider">|</span>
                        <div class="reflections-sc2">Reflections are <span id="privacy"></span></div>
                    </div>
                    <div class="feeling-abt" id="questiontitle">How are you feeling about the test today?</div>
                    <div class="review-blk" id="reviewblock">
                    </div>
                </div>
                @*<div class="mf">
                        <div class="float-right">
                            <button type="button" class="btn-send">Done</button>
                        </div>
                    </div>*@
            </div>

            @*<div class="smile-des">click</div>
                <div class="card custom-profle-card">
                    <div class="card-body">
                        <img src="~/Images/Avatar.png" alt="avatar" class="profile-pic" />
                        <div class="profile-name">Grace Taylor</div>
                        <div class="start-chat">
                            <span class="chat-icon"></span>
                            <span class="st-chat-txt">Start a chat</span>
                        </div>
                        <div class="mail">
                            <span class="mail-icon"></span>
                            <span class="mail-txt">grace.taylor@contososd.edu</span>
                        </div>
                    </div>
                </div>*@


        </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
    <script type="text/javascript">
        let accesstoken;
        $(document).ready(function () {
            $(".loader").show();
            $.ajax({
                url: "/api/GetAccessTokenAsync",
                type: "Get",
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'Accept': 'application/json'
                },
                success: function (token) {
                    accesstoken = token;
                },
                complete: function () {
                    if (accesstoken !== undefined && accesstoken !== null && accesstoken !== '') {
                        GetReflections();
                    }
                }
            });
        });

        function GetReflections() {
            $.ajax({
                type: 'GET',
                url: '/api/GetReflections/' + $("#reflectionid").val(),
                success: function (data) {
                    $(".loader").hide();
                    if (data) {
                        data = JSON.parse(data);
                    }
                    if (data && data.feedback && data.reflection && data.question) {
                        debugger;
                        var feedback = JSON.parse(data.feedback);
                        var reflection = JSON.parse(data.reflection);
                        var question = JSON.parse(data.question)
                        $("#createdby").text(reflection.CreatedBy);
                        $("#questiontitle").text(question.Question);
                        $("#privacy").text(reflection.Privacy);
                        var blockdata = ''
                        var color = "white";
                        var totalcount = 0;
                        var datacount = 0;
                        var width = 0;
                        var descriptio = "";
                        Object.keys(JSON.parse(data.feedback)).forEach(x => {
                            totalcount = totalcount + feedback[x].length;
                        })
                        for (i = 1; i <= 5; i++) {
                            if (Object.keys(feedback).indexOf(i.toString()) !== -1) {
                                datacount = feedback[i].length;
                                description = reflection.Privacy == "anonymous" ? "" : feedback[i].map(x => x.FullName).join(',');
                                width = ((datacount * 100) / totalcount).toFixed(0);

                            }
                            else {
                                datacount = 0;
                                width = 0;
                                description = "";
                            }
                            if (i == 1) {
                                color = "green";
                                img = "1.png";
                            }
                            else if (i == 2) {
                                color = "light-green";
                                img = "2.png";
                            }
                            else if (i == 3) {
                                color = "orng";
                                img = "3.png";
                            }
                            else if (i == 4) {
                                color = "red";
                                img = "4.png";
                            }
                            else if (i == 5) {
                                color = "dark-red";
                                img = "5.png";
                            }
                            blockdata = blockdata + '<div class="media"><img src="../Images/' + img + '" class="align-self-start smils" alt="smile2"><div class="media-body cb-smile2"><div class="progress custom-pr"><div class="progress-bar bg-' + color + '" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:' + width.toString() + '%"></div></div>';

                            if (description) {
                                feedback[i].forEach(data => {
                                    blockdata = blockdata + '<div class="smile-desc' + data.FeedbackID + '">' + data.FullName + '</div><div class="card custom-profle-card' + data.FeedbackID + '"> <div class="card-body"> <img src="' + GetPhoto(data.FeedbackGivenBy, accesstoken) + '" alt="avatar" class="profile-pic" /> <div class="profile-name">"' + data.FullName + '"</div > <div class="start-chat" onclick="microsoftTeams.executeDeepLink(https://teams.microsoft.com/l/chat/0/0?users=v-sivsat@microsoft.com)"> <span class="chat-icon"></span> <span class="st-chat-txt">Start a chat</span> </div> <div class="mail"> <span class="mail-icon"></span> <span class="mail-txt">' + data.FeedbackGivenBy + '</span> </div> </div > </div > '
                                })
                            }
                            blockdata = blockdata + '</div><div class="cnt-box">' + width + '%<span class="cnt">(' + datacount + ')</span></div ></div >';
                        }
                        $("#reviewblock").html(blockdata);
                        for (i = 1; i <= 5; i++) {
                            $(".custom-profle-card" + i).css("display", "none");
                            $(".smile-desc" + i).on('click mouseover', function (event) {
                                $(".custom-profle-card" + event.currentTarget.className[10]).toggle();
                            })

                            $(".smile-desc" + i).mouseleave(function () {
                                $(".custom-profle-card" + event.currentTarget.className[10]).toggle();
                            })
                        }
                    }
                    else {
                        alert("no data");
                    }
                }
            });
        }

        function GetPhoto(userid, accesstoken) {
            var profilepath = "";
            $.ajax({
                url: "/ProfilePhoto",
                data: { 'token': accesstoken, 'userid': userid },
                type: "GET",
                async: false,
                success: function (response) {
                    if (response !== null) {
                        profilepath = response;
                    } else {
                        alert("Something went wrong");
                    }
                },
                error: function () {
                    console.log("Failed");
                }
            });
            return profilepath;
        }

    </script>
</body>


</html>